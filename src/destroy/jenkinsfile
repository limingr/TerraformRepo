pipeline {
    agent any
    
    parameters { text(name: 'BUILD_ENV', defaultValue: 'wsdeploy', description: '') }
    
    environment {
        AZURE_SUBSCRIPTION_ID='aae27198-c02d-49fc-a164-d45d35267dd2'
        AZURE_TENANT_ID='e22100bd-861d-4f4c-a190-7c4f45feeccf'
        AZURE_BACKEND_STORAGE_SECRET = credentials('terraform_state_azure_backend_storage_key')
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building....'
                echo "BUILD_ENV = ${BUILD_ENV}"
                sh 'pwd'
            }
        }
        stage('Test') {
            steps {
                withCredentials([azureServicePrincipal('AzureServicePrincipal')]) {
                    dir('.'){
                        sh """#!/bin/bash
                        set -e
                        
                        echo "select workspace ${BUILD_ENV}... "
                        terraform workspace new ${BUILD_ENV}  || true
                        terraform workspace select ${BUILD_ENV} 

                        terraform init -no-color \
                            -backend-config='storage_account_name=tstate13126' \
                            -backend-config='container_name=tstate' \
                            -backend-config='key=terraform.mytfstate' \
                            -backend-config='access_key=${AZURE_BACKEND_STORAGE_SECRET}'

                        // The second init is needed, don't delete
                        terraform init -no-color \
                            -backend-config='storage_account_name=tstate13126' \
                            -backend-config='container_name=tstate' \
                            -backend-config='key=terraform.mytfstate' \
                            -backend-config='access_key=${AZURE_BACKEND_STORAGE_SECRET}'

                        terraform plan -destroy  -no-color -var client_secret='${AZURE_CLIENT_SECRET}'  -var suggested_rg_name='${BUILD_ENV}'
                        terraform destroy -auto-approve -no-color -var client_secret='${AZURE_CLIENT_SECRET}' -var suggested_rg_name='${BUILD_ENV}'
 
                        sh """
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}
